name: Build e Deploy para as VMs do GCP

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_REGION: ${{ secrets.GCP_COMPUTE_REGION }}
  GCP_ZONE: ${{ secrets.GCP_COMPUTE_ZONE }}
  VM_FRONTEND_NAME: vm-frontend-mensal
  FRONTEND_PROJECT_PATH: /home/renanmphp/ibell-embalagens-client

  GHCR_REGISTRY: ghcr.io
  GHCR_IMAGE_OWNER: renanmontanopaz
  FRONTEND_IMAGE_NAME: ghcr.io/renanmontanopaz/ibell-embalagens-client
  FRONTEND_CONTAINER_NAME: meu-vue-container

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: ./package-lock.json

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GHCR_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Build and Push Frontend Docker Image
        run: |
          echo "Building frontend image from repository root..."
          docker build -t ${{ env.FRONTEND_IMAGE_NAME }}:latest -t ${{ env.FRONTEND_IMAGE_NAME }}:${{ github.sha }} .
          echo "Pushing frontend image to GHCR..."
          docker push ${{ env.FRONTEND_IMAGE_NAME }}:latest
          docker push ${{ env.FRONTEND_IMAGE_NAME }}:${{ github.sha }}

      # --- Deploy Frontend ---
      - name: Deploy Frontend to vm-frontend via SSH/IAP
        run: |
          gcloud compute ssh ${{ env.VM_FRONTEND_NAME }} \
            --zone ${{ env.GCP_ZONE }} \
            --project ${{ env.GCP_PROJECT_ID }} \
            --quiet \
            --tunnel-through-iap \
            --command="
              echo '>>> Logging into GHCR...' && \
              echo '${{ secrets.GITHUB_TOKEN }}' | sudo docker login ${{ env.GHCR_REGISTRY }} -u ${{ github.actor }} --password-stdin && \
              echo '>>> Pulling new frontend image...' && \
              sudo docker pull ${{ env.FRONTEND_IMAGE_NAME }}:latest && \
              echo '>>> Stopping and removing old frontend container...' && \
              (sudo docker stop ${{ env.FRONTEND_CONTAINER_NAME }} && sudo docker rm ${{ env.FRONTEND_CONTAINER_NAME }}) || echo 'Container stop/rm failed, likely already stopped/removed.' && \
              echo '>>> Starting new frontend container...' && \
              sudo docker run -d --name ${{ env.FRONTEND_CONTAINER_NAME }} -p 80:80 ${{ env.FRONTEND_IMAGE_NAME }}:latest && \
              echo '>>> Frontend deployment potentially complete.' && \
              echo '>>> Cleaning up old images (optional)...' && \
              sudo docker image prune -af || echo 'Prune failed, continuing...'
              "